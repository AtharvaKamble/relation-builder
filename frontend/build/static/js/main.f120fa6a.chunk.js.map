{"version":3,"sources":["utils/CheckTable.js","utils/AddTable.js","utils/MainArea.js","utils/SideBar.js","App.js","reportWebVitals.js","index.js"],"names":["rows","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","CustomizedTables","props","a","classes","console","log","userData","connectedPeopleList","TableContainer","component","Paper","Table","className","aria-label","TableBody","map","row","r","align","scope","StyledTableCell","StyledTableRow","useEffect","i","length","push","person","relation","relative","addToRows","relationsDataNames","TableHead","MainArea","useState","arr","setArr","addArr","setAddArr","beforeLength","setBeforeLength","beforeLengthALL","setBeforeLengthALL","setPerson","setRelation","setRelative","personRA","setPersonRA","relativeRA","setRelativeRA","setLen","hidden","isAdd","AddTable","value","autoFocus","onChange","e","target","trim","placeholder","Button","onClick","requestOptions","method","headers","JSON","stringify","name","fetch","then","res","json","data","variant","isCheck","CheckTable","LEAVE_TEMP","window","addEventListener","preventDefault","status","SideBar","classToMain","setClassToMain","classToRelation","setClassToRelation","classLeaveDiv","setClassLeaveDiv","isAddPeopleDiv","setIsAddPeopleDiv","isCheckRelationDiv","setIsCheckRelationDiv","temp","location","reload","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f120fa6a.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#2e1d1d',\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n// function createData(name, relation, relative) {\r\n//   return { name, relation, relative };\r\n// }\r\n\r\nvar rows = [];\r\n// createData('John Doe', 'brother', 'Dwight'),\r\n// createData('Dwight', 'friend', 'Jim'),\r\n// createData('Jim', 'brother', 'Jane'),\r\n// createData('Jim1', 'brother', 'Jane'),\r\n// createData('Jim2', 'brother', 'Jane'),\r\n// createData('Jim3', 'brother', 'Jane'),\r\n// createData('Jim4', 'brother', 'Jane'),\r\n// createData('Jim5', 'brother', 'Jane'),\r\n// createData('Jim6', 'brother', 'Jane'),\r\n// createData('Jim7', 'brother', 'Jane'),\r\n\r\nfunction addToRows(a) {\r\n    rows = []\r\n    rows = [...a]\r\n}\r\n\r\n// const rowNew = [['jane', 'john'], ['jim', 'dwight'], ['sameer', 'aayushi', 'dwight']]  // SAMPLE DATA\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction CustomizedTables(props) {\r\n  const classes = useStyles();\r\n  console.log('YEHEYEE ', rows)\r\n  if (props.userData.connectedPeopleList) {\r\n      addToRows(props.userData.connectedPeopleList)\r\n  }\r\n\r\n  console.log(\"CheckTable \", props.userData.connectedPeopleList)\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n              <TableRow>\r\n              {\r\n                  row.map(r => (\r\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">{r}</TableCell>\r\n                  ))\r\n              }\r\n              </TableRow>\r\n\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default CustomizedTables;\r\n","import { React, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#2e1d1d',\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(person, relation, relative) {\r\n  return { person, relation, relative };\r\n}\r\n\r\nvar rows = [];\r\n\r\nfunction addToRows (a) {\r\n    rows = []\r\n    if (a) {\r\n        for (var i = 0; i < a.length; i++) {\r\n            rows.push(createData(a[i].person, a[i].relation, a[i].relative))\r\n        }\r\n    }\r\n    // console.log('A-> ', a)  // DEBUG\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction CustomizedTables(props) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n      addToRows(props.userData.relationsDataNames)\r\n  }, [props.userData])\r\n\r\n\r\n  // const rows = props\r\n\r\n  // console.log(\"AddTable \", props.userData.relationsDataNames)  // DBEUG\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"center\">PERSON</StyledTableCell>\r\n            <StyledTableCell align=\"center\">RELATION</StyledTableCell>\r\n            <StyledTableCell align=\"center\">RELATIVE</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={[row.person, row.relative]}>\r\n              <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">{row.person}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{row.relation}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{row.relative}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default CustomizedTables;\r\n","import { React, useState, useEffect } from 'react';\r\nimport CheckTable from './CheckTable.js'\r\nimport AddTable from './AddTable.js'\r\nimport Button from '@material-ui/core/Button';\r\nimport '../App.css';\r\nimport '../Animation.css'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction MainArea(props) {\r\n    const [ arr, setArr ] = useState([])\r\n    const [ addArr, setAddArr ] = useState([])\r\n    const [ beforeLength, setBeforeLength ] = useState(0)\r\n    const [ afterLength, setAfterLength ] = useState(0)\r\n    const [ beforeLengthALL, setBeforeLengthALL ] = useState(0)\r\n    const [ afterLengthALL, setAfterLengthALL ] = useState(0)\r\n\r\n    // Relation area post request\r\n    // PROXY http://localhost:8080\r\n    function addPeoplePOSTRequest () {\r\n        if (!personRA || !relativeRA) {\r\n            return\r\n        }\r\n\r\n        if (arr.connectedPeopleList) {\r\n            setBeforeLength(arr.connectedPeopleList.length)\r\n        }\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name: personRA, relative: relativeRA })   // NOT DEBUG\r\n            // body: JSON.stringify({ name: 'Jane', relative: 'Sameer' })\r\n        }\r\n        fetch('/add/relation', requestOptions)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            // console.log('DAJSDLKDHAJKDH ', data.connectedPeopleList)\r\n            if (data.connectedPeopleList) {\r\n                if (data.connectedPeopleList.length > beforeLength) {\r\n                    // setArr([])\r\n                    setArr(data)\r\n                }\r\n            }\r\n\r\n        })\r\n        // HAVE TO THINK ABOUT THIS FEATURE\r\n        setPersonRA('')\r\n        setRelativeRA('')\r\n    }\r\n\r\n    // Main area post request\r\n    // PROXY http://localhost:8080\r\n    function addAllPeoplePOSTRequest() {\r\n        if (!person || !relative || !relation) {\r\n            return\r\n        }\r\n\r\n        if (addArr.relationsDataNames) {\r\n            setBeforeLengthALL(addArr.relationsDataNames.length)\r\n        }\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ name: person, relative, relation })   // NOT DEBUG\r\n            // body: JSON.stringify({ name: 'Aayushi', relative: 'Jane', relation: 'friend' })\r\n        }\r\n        fetch('/add/relation', requestOptions)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            // If data has updated in the database, then only update visible table\r\n            if (data.relationsDataNames.length > beforeLengthALL) {\r\n                setAddArr(data)\r\n            }\r\n\r\n        })\r\n        setPerson('')\r\n        setRelative('')\r\n        setRelation('')\r\n    }\r\n    // console.log('ADDEEDE ', addArr)\r\n    const [ person, setPerson ] = useState('')\r\n    const [ relation, setRelation ] = useState('')\r\n    const [ relative, setRelative ] = useState('')\r\n    const [ personRA, setPersonRA ] = useState('')\r\n    const [ relativeRA, setRelativeRA ] = useState('')\r\n    const [ len, setLen ] = useState(0)\r\n    // console.log(\"DEUBUGBUGBGUB \", arr.connectedPeopleList)\r\n    const data = {\r\n        person,\r\n        relation,\r\n        relative\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (addArr.relationsDataNames) {\r\n            setLen(addArr.relationsDataNames.length)\r\n        }\r\n\r\n        if (arr.connectedPeopleList) {\r\n            setLen(arr.connectedPeopleList)\r\n        }\r\n\r\n        // fetch()\r\n    }, [addArr])\r\n\r\n  return (\r\n    <div>\r\n        <div className='main-area' hidden={props.isAdd}>\r\n            <div className=\"people-display\">\r\n            \t{/*len ? <AddTable userData={addArr}/> : null*/}\r\n                <AddTable userData={addArr}/>\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <input className=\"person-input\" value={person} autoFocus onChange={(e) => setPerson(e.target.value.trim())} placeholder=\"Person\"/>\r\n                <input className=\"relation-input\" value={relation} onChange={(e) => setRelation(e.target.value.trim())} placeholder=\"Relation\"/>\r\n                <input className=\"relative-input\" value={relative} onChange={(e) => setRelative(e.target.value.trim())} placeholder=\"Relative\" />\r\n            </div>\r\n            <Button className=\"submit-button\" onClick={addAllPeoplePOSTRequest} variant=\"outlined\">ADD</Button>\r\n        </div>\r\n        <div className=\"relation-area fade-in\" hidden={props.isCheck}>\r\n\r\n            <div className=\"input-container\">\r\n                <input className=\"person-input\" value={personRA} autoFocus onChange={(e) => setPersonRA(e.target.value)} placeholder=\"Person\"/>\r\n                <input className=\"relative-input\" value={relativeRA} onChange={(e) => setRelativeRA(e.target.value)} placeholder=\"Relative\" />\r\n            </div>\r\n            <Button className=\"submit-button\" onClick={addPeoplePOSTRequest} variant=\"outlined\">ADD</Button>\r\n            <CheckTable userData={arr}/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainArea;\r\n","import { React, useState } from 'react';\r\nimport MainArea from './MainArea.js'\r\nimport Dialogue from './Dialogue.js'    // Implement later\r\nimport '../App.css';\r\nimport '../Animation.css'\r\n\r\nconst LEAVE_TEMP = 'leave'\r\n\r\n// After closing tab, empty database\r\n// PROXY http://localhost:8080\r\nwindow.addEventListener(\"unload\", (e) => {\r\n    e.preventDefault();\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ status: 'clear data' })\r\n    }\r\n    fetch('/clear', requestOptions)\r\n    .then(res => res.json())\r\n    .then(data => data)\r\n});\r\n\r\nfunction SideBar() {\r\n    const [ classToMain, setClassToMain ] = useState('to-main shadow-pop-bl')\r\n    const [ classToRelation, setClassToRelation ] = useState('to-relation')\r\n    const [ classLeaveDiv, setClassLeaveDiv ] = useState('leave')\r\n\r\n    const addClassToMain = () => {\r\n        const temp = classToMain\r\n        setClassToMain(temp + ' ' + 'shadow-pop-bl')\r\n        setClassToRelation('to-relation')\r\n        setIsAddPeopleDiv(false)\r\n        setIsCheckRelationDiv(true)\r\n        setClassLeaveDiv(LEAVE_TEMP)\r\n    }\r\n\r\n    const addClassToRelation = () => {\r\n        const temp = classToRelation\r\n        setClassToMain('to-main')\r\n        setClassToRelation(temp + ' ' + 'shadow-pop-bl')\r\n        setIsAddPeopleDiv(true)\r\n        setIsCheckRelationDiv(false)\r\n        setClassLeaveDiv(LEAVE_TEMP)\r\n    }\r\n\r\n    const leave = () => {\r\n        const temp = classLeaveDiv\r\n        setClassLeaveDiv(temp + ' ' + 'wobble-hor-bottom')\r\n\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ status: 'clear data' })\r\n        }\r\n        fetch('http://localhost:8080/clear', requestOptions)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.status) {\r\n                window.location.reload()\r\n            }\r\n            // console.log(data)   // DEBUG\r\n        })\r\n    }\r\n\r\n    const [ isAddPeopleDiv, setIsAddPeopleDiv ] = useState(false)\r\n    const [ isCheckRelationDiv, setIsCheckRelationDiv ] = useState(true)\r\n\r\n    // console.log(isCheckRelationDiv)  // DEBUG\r\n  return (\r\n      <div className=\"entire-container\">\r\n        <div className=\"sidebar\">\r\n            <label>RELATIONS BUILDER</label>\r\n            <div className={classToMain} onClick={addClassToMain}>Add People</div>\r\n            <div className={classToRelation} onClick={addClassToRelation}>Check Relation</div>\r\n            <div className={classLeaveDiv} onClick={leave}>Clear DATA</div>\r\n        </div>\r\n        <MainArea isAdd={isAddPeopleDiv} isCheck={isCheckRelationDiv}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import { React } from 'react';\nimport './App.css';\nimport MainArea from './utils/MainArea.js'\nimport SideBar from './utils/SideBar.js'\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"App\">\n            <Route exact path=\"/\">\n                <SideBar />\n            </Route>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}