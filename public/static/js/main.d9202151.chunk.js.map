{"version":3,"sources":["utils/CheckTable.js","utils/AddTable.js","utils/MainArea.js","utils/SideBar.js","App.js","reportWebVitals.js","index.js"],"names":["rows","withStyles","theme","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","CustomizedTables","props","a","classes","console","log","userData","connectedPeopleList","TableContainer","component","Paper","Table","className","aria-label","TableBody","map","row","r","align","scope","StyledTableCell","StyledTableRow","useEffect","i","length","push","person","relation","relative","addToRows","relationsDataNames","TableHead","Typography","Text","MainArea","useState","arr","setArr","addArr","setAddArr","beforeLength","setBeforeLength","beforeLengthALL","setBeforeLengthALL","setPerson","setRelation","setRelative","personRA","setPersonRA","relativeRA","setRelativeRA","setLen","globalStyles","button","borderRadius","background","border","hidden","isAdd","AddTable","value","autoFocus","onChange","e","target","trim","placeholder","style","onClick","requestOptions","method","headers","JSON","stringify","name","fetch","then","res","json","data","type","size","isCheck","CheckTable","LEAVE_TEMP","window","addEventListener","preventDefault","status","SideBar","classToMain","setClassToMain","classToRelation","setClassToRelation","classLeaveDiv","setClassLeaveDiv","isAddPeopleDiv","setIsAddPeopleDiv","isCheckRelationDiv","setIsCheckRelationDiv","temp","location","reload","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9202151.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#2e1d1d',\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n// function createData(name, relation, relative) {\r\n//   return { name, relation, relative };\r\n// }\r\n\r\nvar rows = [];\r\n// createData('John Doe', 'brother', 'Dwight'),\r\n// createData('Dwight', 'friend', 'Jim'),\r\n// createData('Jim', 'brother', 'Jane'),\r\n// createData('Jim1', 'brother', 'Jane'),\r\n// createData('Jim2', 'brother', 'Jane'),\r\n// createData('Jim3', 'brother', 'Jane'),\r\n// createData('Jim4', 'brother', 'Jane'),\r\n// createData('Jim5', 'brother', 'Jane'),\r\n// createData('Jim6', 'brother', 'Jane'),\r\n// createData('Jim7', 'brother', 'Jane'),\r\n\r\nfunction addToRows(a) {\r\n    rows = []\r\n    rows = [...a]\r\n}\r\n\r\n// const rowNew = [['jane', 'john'], ['jim', 'dwight'], ['sameer', 'aayushi', 'dwight']]  // SAMPLE DATA\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction CustomizedTables(props) {\r\n  const classes = useStyles();\r\n  console.log('YEHEYEE ', rows)\r\n  if (props.userData.connectedPeopleList) {\r\n      addToRows(props.userData.connectedPeopleList)\r\n  }\r\n\r\n  console.log(\"CheckTable \", props.userData.connectedPeopleList)\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n              <TableRow>\r\n              {\r\n                  row.map(r => (\r\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">{r}</TableCell>\r\n                  ))\r\n              }\r\n              </TableRow>\r\n\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default CustomizedTables;\r\n","import { React, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: '#2e1d1d',\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(person, relation, relative) {\r\n  return { person, relation, relative };\r\n}\r\n\r\nvar rows = [];\r\n\r\nfunction addToRows(a) {\r\n  rows = [];\r\n  if (a) {\r\n    for (var i = 0; i < a.length; i++) {\r\n      rows.push(createData(a[i].person, a[i].relation, a[i].relative));\r\n    }\r\n  }\r\n  // console.log('A-> ', a)  // DEBUG\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction CustomizedTables(props) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    addToRows(props.userData.relationsDataNames);\r\n  }, [props.userData]);\r\n\r\n  // const rows = props\r\n\r\n  // console.log(\"AddTable \", props.userData.relationsDataNames)  // DBEUG\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"center\" className=\"font-table-title\">\r\n              PERSON\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"center\" className=\"font-table-title\">\r\n              RELATION\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"center\" className=\"font-table-title\">\r\n              RELATIVE\r\n            </StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={[row.person, row.relative]}>\r\n              <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                {row.person}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\">{row.relation}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{row.relative}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default CustomizedTables;\r\n","import { React, useState, useEffect } from 'react';\r\nimport CheckTable from './CheckTable.js';\r\nimport AddTable from './AddTable.js';\r\n// import Button from '@material-ui/core/Button';\r\nimport '../App.css';\r\nimport '../Animation.css';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { Button, Typography } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst { Text } = Typography;\r\n\r\nfunction MainArea(props) {\r\n  const [arr, setArr] = useState([]);\r\n  const [addArr, setAddArr] = useState([]);\r\n  const [beforeLength, setBeforeLength] = useState(0);\r\n  const [afterLength, setAfterLength] = useState(0);\r\n  const [beforeLengthALL, setBeforeLengthALL] = useState(0);\r\n  const [afterLengthALL, setAfterLengthALL] = useState(0);\r\n\r\n  // Relation area post request\r\n  // PROXY http://localhost:8080\r\n  function addPeoplePOSTRequest() {\r\n    if (!personRA || !relativeRA) {\r\n      return;\r\n    }\r\n\r\n    if (arr.connectedPeopleList) {\r\n      setBeforeLength(arr.connectedPeopleList.length);\r\n    }\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name: personRA, relative: relativeRA }), // NOT DEBUG\r\n      // body: JSON.stringify({ name: 'Jane', relative: 'Sameer' })\r\n    };\r\n    fetch('/add/relation', requestOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log('DAJSDLKDHAJKDH ', data.connectedPeopleList)\r\n        if (data.connectedPeopleList) {\r\n          if (data.connectedPeopleList.length > beforeLength) {\r\n            // setArr([])\r\n            setArr(data);\r\n          }\r\n        }\r\n      });\r\n    // HAVE TO THINK ABOUT THIS FEATURE\r\n    setPersonRA('');\r\n    setRelativeRA('');\r\n  }\r\n\r\n  // Main area post request\r\n  // PROXY http://localhost:8080\r\n  function addAllPeoplePOSTRequest() {\r\n    if (!person || !relative || !relation) {\r\n      return;\r\n    }\r\n\r\n    if (addArr.relationsDataNames) {\r\n      setBeforeLengthALL(addArr.relationsDataNames.length);\r\n    }\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name: person, relative, relation }), // NOT DEBUG\r\n      // body: JSON.stringify({ name: 'Aayushi', relative: 'Jane', relation: 'friend' })\r\n    };\r\n    fetch('/add/relation', requestOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // If data has updated in the database, then only update visible table\r\n        if (data.relationsDataNames.length > beforeLengthALL) {\r\n          setAddArr(data);\r\n        }\r\n      });\r\n    setPerson('');\r\n    setRelative('');\r\n    setRelation('');\r\n  }\r\n  // console.log('ADDEEDE ', addArr)\r\n  const [person, setPerson] = useState('');\r\n  const [relation, setRelation] = useState('');\r\n  const [relative, setRelative] = useState('');\r\n  const [personRA, setPersonRA] = useState('');\r\n  const [relativeRA, setRelativeRA] = useState('');\r\n  const [len, setLen] = useState(0);\r\n  // console.log(\"DEUBUGBUGBGUB \", arr.connectedPeopleList)\r\n  const data = {\r\n    person,\r\n    relation,\r\n    relative,\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (addArr.relationsDataNames) {\r\n      setLen(addArr.relationsDataNames.length);\r\n    }\r\n\r\n    if (arr.connectedPeopleList) {\r\n      setLen(arr.connectedPeopleList);\r\n    }\r\n\r\n    // fetch()\r\n  }, [addArr]);\r\n\r\n  const globalStyles = {\r\n    button: {\r\n      borderRadius: '5px',\r\n      background: '#2e1d1d',\r\n      border: '#2e1d1d',\r\n      className: 'font-button',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <div className=\"m-20 p-20 shadow-lg rounded-lg\" hidden={props.isAdd}>\r\n        <div className=\"people-display\">\r\n          {/*len ? <AddTable userData={addArr}/> : null*/}\r\n          <AddTable userData={addArr} />\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input\r\n            className=\"person-input\"\r\n            value={person}\r\n            autoFocus\r\n            onChange={(e) => setPerson(e.target.value.trim())}\r\n            placeholder=\"Person\"\r\n          />\r\n          <input\r\n            className=\"relation-input\"\r\n            value={relation}\r\n            onChange={(e) => setRelation(e.target.value.trim())}\r\n            placeholder=\"Relation\"\r\n          />\r\n          <input\r\n            className=\"relative-input\"\r\n            value={relative}\r\n            onChange={(e) => setRelative(e.target.value.trim())}\r\n            placeholder=\"Relative\"\r\n          />\r\n        </div>\r\n        <Button\r\n          style={globalStyles.button}\r\n          className={globalStyles.button.className}\r\n          onClick={addAllPeoplePOSTRequest}\r\n          type=\"primary\"\r\n          size=\"large\"\r\n        >\r\n          Add relation\r\n        </Button>\r\n      </div>\r\n      <div\r\n        className=\"m-10 p-40 shadow-lg rounded-lg fade-in\"\r\n        hidden={props.isCheck}\r\n      >\r\n        <p className=\"text-3xl text-gray-800 font-title\">\r\n          Check how two people are connected\r\n        </p>\r\n        <div className=\"input-container\">\r\n          <input\r\n            className=\"person-input\"\r\n            value={personRA}\r\n            autoFocus\r\n            onChange={(e) => setPersonRA(e.target.value)}\r\n            placeholder=\"Person\"\r\n          />\r\n          <input\r\n            className=\"relative-input\"\r\n            value={relativeRA}\r\n            onChange={(e) => setRelativeRA(e.target.value)}\r\n            placeholder=\"Relative\"\r\n          />\r\n        </div>\r\n        <Button\r\n          style={globalStyles.button}\r\n          className={globalStyles.button.className}\r\n          onClick={addPeoplePOSTRequest}\r\n          type=\"primary\"\r\n          size=\"large\"\r\n        >\r\n          Find relation\r\n        </Button>\r\n        <CheckTable userData={arr} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainArea;\r\n","import { React, useState } from 'react';\r\nimport MainArea from './MainArea.js'\r\nimport Dialogue from './Dialogue.js'    // Implement later\r\nimport '../App.css';\r\nimport '../Animation.css'\r\nimport {Row, Col} from 'antd'\r\n\r\nconst LEAVE_TEMP = 'leave'\r\n\r\n// After closing tab, empty database\r\n// PROXY http://localhost:8080\r\nwindow.addEventListener(\"unload\", (e) => {\r\n    e.preventDefault();\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ status: 'clear data' })\r\n    }\r\n    fetch('/clear', requestOptions)\r\n    .then(res => res.json())\r\n    .then(data => data)\r\n});\r\n\r\nfunction SideBar() {\r\n    const [ classToMain, setClassToMain ] = useState('to-main shadow-pop-bl')\r\n    const [ classToRelation, setClassToRelation ] = useState('to-relation')\r\n    const [ classLeaveDiv, setClassLeaveDiv ] = useState('leave')\r\n\r\n    const addClassToMain = () => {\r\n        const temp = classToMain\r\n        setClassToMain(temp + ' ' + 'shadow-pop-bl')\r\n        setClassToRelation('to-relation')\r\n        setIsAddPeopleDiv(false)\r\n        setIsCheckRelationDiv(true)\r\n        setClassLeaveDiv(LEAVE_TEMP)\r\n    }\r\n\r\n    const addClassToRelation = () => {\r\n        const temp = classToRelation\r\n        setClassToMain('to-main')\r\n        setClassToRelation(temp + ' ' + 'shadow-pop-bl')\r\n        setIsAddPeopleDiv(true)\r\n        setIsCheckRelationDiv(false)\r\n        setClassLeaveDiv(LEAVE_TEMP)\r\n    }\r\n\r\n    const leave = () => {\r\n        const temp = classLeaveDiv\r\n        setClassLeaveDiv(temp + ' ' + 'wobble-hor-bottom')\r\n\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ status: 'clear data' })\r\n        }\r\n        fetch('http://localhost:8080/clear', requestOptions)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.status) {\r\n                window.location.reload()\r\n            }\r\n            // console.log(data)   // DEBUG\r\n        })\r\n    }\r\n\r\n    const [ isAddPeopleDiv, setIsAddPeopleDiv ] = useState(false)\r\n    const [ isCheckRelationDiv, setIsCheckRelationDiv ] = useState(true)\r\n\r\n    // console.log(isCheckRelationDiv)  // DEBUG\r\n  return (\r\n      <div className=\"flex w-full h-screen\">\r\n        <div className=\"sidebar w-96\">\r\n            <label className=\"\">RELATIONS BUILDER</label>\r\n            <div className={`w-full ${classToMain}`} onClick={addClassToMain}>Add People</div>\r\n            <div className={classToRelation} onClick={addClassToRelation}>Check Relation</div>\r\n            <div className={classLeaveDiv} onClick={leave}>Clear DATA</div>\r\n        </div>\r\n        <MainArea isAdd={isAddPeopleDiv} isCheck={isCheckRelationDiv}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import { React } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport MainArea from './utils/MainArea.js'\nimport SideBar from './utils/SideBar.js'\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"App\">\n            <Route exact path=\"/\">\n                <SideBar />\n            </Route>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}